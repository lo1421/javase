public class StaticTest04{
	//实例变量i能被static静态代码块访问吗？
	int i;
	//静态代码块
	static{
		System.out.println(i);
	}
	//这显然是错误的：无法从静态上下文中访问非静态 变量 i
	
	
	
	static{
		System.out.println(k);//这里可以访问静态变量k吗？
		//不可以，错误: 非法前向引用
	}
	static int k;
	public static void main(String[] args){
		System.out.println("main begin");
	}
	
}
/*上述代码表明的是同等级的静态变量和静态代码块（都是类级别的），如果静态代码块声明在静态变量的前面，
由于静态变量和静态代码块都是在类加载的时候进行初始化和执行的，则二者的执行顺序是自上而下的
*/
/*
到目前为止，我们遇到的所有的java程序中有顺序要求的有哪些？
1.同一个类中定义的多个静态代码块之间遵循自上而下的顺序执行
2.对于一个方法来说，方法里的代码是有顺序的，遵循自上而下的顺序
3.静态代码块和静态变量由于是同等级的，都是类级别的，所有他们之间也是有先后顺序的
*/
//思考，有静态代码块是否有实例代码块？那么它又属于什么特殊的时刻呢？执行有什么特点呢？语法又是如何的呢？又有什么作用呢？
//所以我们对照着继续学习实例代码块吧！！！在InstanceTest程序中