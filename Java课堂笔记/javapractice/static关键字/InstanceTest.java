/*
学了静态代码块接着对照着学习实例代码块
1.实例代码块在什么时候执行？
2.实例代码块定义的语法是什么？
3.实例代码块是否也是一个特殊的时刻？
4.实例代码块有什么特点？
*/
public class InstanceTest{
	{
		System.out.println("实例代码块执行了");
	}
	//无参构造方法（缺省构造器）
	public InstanceTest(){
		System.out.println("无参构造方法执行啦！");
	}
	//有参构造方法
	public InstanceTest(int i){
		System.out.println("有参构造函数执行啦！");
	}
	public static void main(String[] args){
		System.out.println("main begin");
		new InstanceTest();
		new InstanceTest(1);
	}
}
/*
执行结果
main begin
实例代码块执行了
无参构造方法执行啦！
实例代码块执行了
有参构造函数执行啦！
*/
/*
通过上述的测试可以知道：
只要是构造方法执行，必然在构造方法执行之前，自动执行“实例代码块”当中的代码
实际上实例代码块也是SUN公司为java程序员准备的一个特殊时机，叫做“对象构建时机”
实例代码块的执行顺序可以知道实例代码块是对象/实例级别的，在构建对象的时候执行
写实例代码块能达到什么样的目的呢？就是达到你每构建一次对象的时候你想就执行一个代码片段的目的
（很像把所有构造方法当中当中共有的几段相同的代码，而且是写在了最前面的，把它们“提取公因式”就可以变成像实例代码块这样的代码块，
在构造方法被调用时执行但是要比构造方法内容先执行）
*/