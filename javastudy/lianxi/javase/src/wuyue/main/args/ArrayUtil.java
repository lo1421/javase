package wuyue.main.args;
/*
在这类当中将会使用二分法来实现数组元素的查找

按照二分法的原理来分析的话，这个代码到底该怎么写呢？

中间元素大于目标元素，目标元素在左边，中间元素下标减一之后作为终止元素下标，起点元素不变，
继续二分找出新的中间元素之后与目标元素判断，直到目标元素与中间元素相等则表示找到了

中间元素小于目标元素，目标元素在右边，中间元素下标加一之后作为起点元素下标，终点元素不变，
继续二分找出新的中间元素之后与目标元素判断，直到目标元素与中间元素相等则表示找到了

接下来我会直接将使用二分法实现数组中元素查找的代码封装到方法中
 */
public class ArrayUtil {
    public static void main(String[] args){
        //定义一个整型的一维数组
        int[] arr = {10,23,56,89,100,111,222,235,500,600};
        //要求是在arr数组中查找是否有600这个数据，如果有的话就输出数组中这个对应元素的下标
        //如果没有的话就返回-1
        int index = binarySearch(arr,600);
        System.out.println(index==-1? "数组中该元素不存在":"数组中存在该元素且其下标为："+index);
        /*
        如何解决上述爆红的情况，由于上述爆红的原因是因为使用了未定义的方法，那么我解决这个问题就去把方法定义出来，在IDEA中
        有个快捷生成未定义的方法的方式就是
        把光标停留在未定义的方法上，然后按组合键 alt+回车，然后选择create a method 'binarySearch' in 'ArrayUtil'.即可
         */

    }

    /**
     * 在数组arr中找到目标元素的索引
     * @param arr 被查找的数组
     * @param dest 目标元素的数值
     * @return 若返回的值是-1的话表示数组中不存在目标元素，其它情况均返回的是目标数组的索引
     */
    public static int binarySearch(int[] arr, int dest) {
        //开始元素的下标
        int begin = 0;
        //终止元素的下标
        int end = arr.length-1;
        //使用while do 循环，从这里开始套
        while(begin<=end) {
            /*
            随着循环的次数的增加，表示二分法的轮数在随着循环的次数的增加而增加，那么二分法的轮数的增加，则表示数组的长度在越变越短，这表示数组的
            开始元素的下标和终止元素的下标越来越靠近，什么时候数组不能再进行二分的时候就表示循环也不能继续进行下去，那么数组在满足什么条件的时候
            就表示不能再进行二分了呢，那就是当开始元素的下标刚好等于终止元素的下标了，这个时候就代表数组的长度变成一个点了，那么就不能再进行二分了
            所以在begin<=end 的时候都可以进行二分，也就是循环可以进行
             */
            //中间元素的下标
            int mid = (begin + end) / 2;
            if (arr[mid] == dest) {
                return mid;
            } else if (arr[mid] < dest) {
                //目标元素在中间元素的右边
                //下一轮二分的开始的元素的下标就等于上一轮中间元素加一，终止的元素不变
                begin = mid + 1;
            } else {
                //目标元素在中间元素的左边
                //下一轮二分的终止的元素的下标就等于上一轮中间元素减一，开始的元素不变
                end = mid - 1;
            }
        }//在这里结束循环结束
       return -1;
    }
}
/*
现在需要思考我们应该把上述部分过程套在一个循环中，那么使用哪个循环？哪部分不用套进去？循环的终止条件是什么？
 */
